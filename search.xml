<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VS Code 插件个人汇总</title>
      <link href="/2019/12/23/ge-ren-vs-code-cha-jian-hui-zong/"/>
      <url>/2019/12/23/ge-ren-vs-code-cha-jian-hui-zong/</url>
      
        <content type="html"><![CDATA[<h2 id="插件清单"><a href="#插件清单" class="headerlink" title="插件清单"></a>插件清单</h2><table><thead><tr><th>插件名称</th><th>功能简述</th></tr></thead><tbody><tr><td>Bracket Pair Colorizer</td><td>以不同颜色定位括号括号范围</td></tr><tr><td>CSS Peek</td><td>直接查看，定位 class 定义</td></tr><tr><td>Docker</td><td>Docker 管家</td></tr><tr><td>eggjs</td><td>egg.js 开发辅助插件</td></tr><tr><td>Eslint</td><td>语法纠错</td></tr><tr><td>formate:CSS/LESS/SCSS</td><td>格式化 CSS、Less、Scss 语言</td></tr><tr><td>GitLens — Git supercharged</td><td>增强内置的 Git 功能，通过 Git 责备注释和代码镜头显示代码作者身份</td></tr><tr><td>Markdown Theme Kit</td><td>Markdown 主题工具</td></tr><tr><td>open in browser</td><td>文件右键，可在浏览器预览</td></tr><tr><td>React-Native/React/Redux</td><td>React 开发辅助插件，提供代码高亮、自动补全等功能</td></tr><tr><td>Remote-WSL</td><td>在 VS Code 中连接 Windows 下的 Linux 子系统</td></tr><tr><td>shell-format</td><td>shellscript, ignore, dockerfile 等文件的格式化插件</td></tr><tr><td>Vetur</td><td>Vue 开发辅助插件，提供代码高亮、自动补全等功能</td></tr><tr><td>vscode-icons</td><td>VS Code 文件图标</td></tr><tr><td>Vue 2 Snippets</td><td>Vue 开发辅助插件，提供 Vue 命令简写</td></tr><tr><td>XML Tools</td><td>XML 格式化插件</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发积累 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个 React 项目开发总结</title>
      <link href="/2019/09/07/jun-an-yi-yuan-xiang-mu-qian-duan-kai-fa-zong-jie/"/>
      <url>/2019/09/07/jun-an-yi-yuan-xiang-mu-qian-duan-kai-fa-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="一、框架准备"><a href="#一、框架准备" class="headerlink" title="一、框架准备"></a>一、框架准备</h2><h3 id="1-技术选型"><a href="#1-技术选型" class="headerlink" title="1.技术选型"></a>1.技术选型</h3><p>  <strong>问题：</strong> 由于前项目误导（前项目采用 Amaze UI），在 UI 库上耽误大量时间，Amaze UI  已停止维护<br>  <strong>解决：</strong> 采用 antd-mobile UI 库<br>  <strong>总结：</strong> 长期没人维护的开源项目（例如超过半年每人维护），慎重选择</p><h3 id="2-脚手架搭建频频出错"><a href="#2-脚手架搭建频频出错" class="headerlink" title="2.脚手架搭建频频出错"></a>2.脚手架搭建频频出错</h3><p>  <strong>问题：</strong> 在使用 create-react-app过程中，由于缺乏经验，使用 npm 命令，依赖包下载极其缓慢，安装包过程时常出错<br>  <strong>解决：</strong> 重新安装 npm 包前，先删除 node_modules 文件夹，再重新安装<br>  <strong>总结：</strong> 由于官方镜像网络较慢， npm  包安装容易出错，应切换为国内镜像，统一使用依赖管理工具（本项目使用 yarn）</p><h3 id="3-antd-mobile-按需引入报错"><a href="#3-antd-mobile-按需引入报错" class="headerlink" title="3.antd-mobile 按需引入报错"></a>3.antd-mobile 按需引入报错</h3><p>  <strong>问题：</strong> 按照官方文档，进行样式按需引入操作，项目报错<br>  <strong>解决：</strong> 对 react-app-rewired 依赖包进行降级处理<br>  <strong>总结：</strong> antd-mobile 官方没有及时更新文档或者项目依赖包，按照官方操作多次失败时候，学会查看 github 的 issue 或者进行反馈（现在已正常运行，项目需要关闭重启）</p><h2 id="二、框架上开发"><a href="#二、框架上开发" class="headerlink" title="二、框架上开发"></a>二、框架上开发</h2><h3 id="1-路由选择问题"><a href="#1-路由选择问题" class="headerlink" title="1.路由选择问题"></a>1.路由选择问题</h3><p>  <strong>问题：</strong> BrowerRouter 与 HashRouter 之如何选择<br>  <strong>总结：</strong> 总的来说，这两个 Router 使用起来并没有多大的区别，其中 BrowerRouter 需要服务器配置支持，具体在下一个问题解决 404 里有说到。大项目一般使用 BrowerRouter，也是官方推荐的，有利于提升用户体验（估计是通过服务器路由配置解析渲染，减少客户端的压力），小项目使用 HashRouter</p><h3 id="2-browerRouter-刷新报-404"><a href="#2-browerRouter-刷新报-404" class="headerlink" title="2.browerRouter 刷新报 404"></a>2.browerRouter 刷新报 404</h3><p>  <strong>问题：</strong> HashRouter 更换为 BrowerRouter 后，刷新页面报404<br>  <strong>解决：</strong> 在 Tomcat X.X/conf/web.xml 配置全局 404 页面，代码如下：</p><p><img src="https://blog-1258528531.cos.ap-guangzhou.myqcloud.com/image/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190805103206.png" alt></p><p>  <strong>总结：</strong> </p><ul><li>Nginx 为服务容器配置：</li></ul><p><img src="https://blog-1258528531.cos.ap-guangzhou.myqcloud.com/image/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190805103542.png" alt></p><ul><li><p>Tomcat 为服务容器配置： 同问题解决</p></li><li><p>Nginx + Tomcat: 同问题解决</p></li></ul><h3 id="3-HashRouter-获取参数值"><a href="#3-HashRouter-获取参数值" class="headerlink" title="3.HashRouter 获取参数值"></a>3.HashRouter 获取参数值</h3><p>  <strong>问题：</strong> HashRouter 路由下，无法获取 URL 参数的值<br>  <strong>解决：</strong> 这个还待研究哈</p><h3 id="4-跨域问题"><a href="#4-跨域问题" class="headerlink" title="4.跨域问题"></a>4.跨域问题</h3><p>  <strong>问题：</strong> 接口数据需要跨域<br>  <strong>解决：</strong></p><ul><li>JSONP</li><li>CORS（后台设置）</li><li>Nginx 反向代理</li><li>插件（Allow-Control-Allow-Origin）</li></ul><h3 id="5-修改-antd-mobile-默认样式"><a href="#5-修改-antd-mobile-默认样式" class="headerlink" title="5.修改 antd-mobile  默认样式"></a>5.修改 antd-mobile  默认样式</h3><p>  <strong>问题：</strong> 因项目需求，需要更改 UI 库的默认样式<br>  <strong>解决：</strong> 进行样式代码覆盖，<strong>注意</strong></p><ul><li>要覆盖的类名要复制正确，避免进行样式污染</li><li>样式类名覆盖之前，需要添加引用页面的标识类名，避免全局样式污染;<br>如，A页面： .classA .覆盖样式 ；B页面：.classB .覆盖样式</li></ul><h3 id="6-CSS-文件全局化问题"><a href="#6-CSS-文件全局化问题" class="headerlink" title="6.CSS 文件全局化问题"></a>6.CSS 文件全局化问题</h3><p>  <strong>问题：</strong> React 项目中的 CSS 文件是全局化的，容易造成命名冲突或者样式污染<br>  <strong>解决：</strong> 启动 CSS Modules（Create-React-App支持），[name].CSS 命名改为[name].module.css</p><h3 id="7-antd-mobile-没有表格组件"><a href="#7-antd-mobile-没有表格组件" class="headerlink" title="7. antd-mobile 没有表格组件"></a>7. antd-mobile 没有表格组件</h3><p>  <strong>问题：</strong> 因项目需求，需要用到表格组件，而 antd-mobile 库没有该组件<br>  <strong>解决：</strong> 自定义下载 Bootstrap 表格样式代码引入使用</p><h2 id="三、详细开发"><a href="#三、详细开发" class="headerlink" title="三、详细开发"></a>三、详细开发</h2><h3 id="1-axios-获取接口数据的生命周期"><a href="#1-axios-获取接口数据的生命周期" class="headerlink" title="1.axios 获取接口数据的生命周期"></a>1.axios 获取接口数据的生命周期</h3><p>  <strong>问题：</strong> 接口请求函数放在 componentWillMount()中产生一系列错误<br>  <strong>解决：</strong> 接口请求放在 componentDidMount() 生命周期中</p><h3 id="2-时间格式系统不兼容问题"><a href="#2-时间格式系统不兼容问题" class="headerlink" title="2.时间格式系统不兼容问题"></a>2.时间格式系统不兼容问题</h3><p>  <strong>问题：</strong> 时间格式为 yyyy-MM-dd 表示时间，苹果系的系统出现 NaN 乱码<br>  <strong>解决：</strong> 将时间格式修改为yyyy/MM/dd<br>  <strong>总结：</strong> 注意系统平台之间的兼容问题，采取兼容的措施。</p><h3 id="3-setState-异步问题"><a href="#3-setState-异步问题" class="headerlink" title="3.setState 异步问题"></a>3.setState 异步问题</h3><p>  <strong>问题：</strong> 由于 setState({}) 为异步函数，部分业务代码需要执行 setState 后才可正常运行<br>  <strong>解决：</strong> 后续代码若需改为同步操作，则可写成 setState({}, () =&gt; { 此处是运行 setState 后运行得代码块 }) </p><h2 id="四、项目优化"><a href="#四、项目优化" class="headerlink" title="四、项目优化"></a>四、项目优化</h2><h3 id="1-代码体积过大"><a href="#1-代码体积过大" class="headerlink" title="1.代码体积过大"></a>1.代码体积过大</h3><p>  <strong>问题：</strong> 项目打包后，体积仍然过大，影响加载性能<br>  <strong>解决：</strong>  </p><ul><li>合理进行图片压缩</li><li>在 nginx 启动压缩</li></ul><h3 id="2-项目初启动动画"><a href="#2-项目初启动动画" class="headerlink" title="2.项目初启动动画"></a>2.项目初启动动画</h3><p>  <strong>问题：</strong> 在初启动页面中添加加载动画，必须加载完包数据才显示出来，时间较长，严重影响用户体验<br>  <strong>解决：</strong> 在项目根目录中（index.html)，添加 DOMContentLoaded 函数进行动画处理</p><h3 id="3-项目首屏渲染过慢"><a href="#3-项目首屏渲染过慢" class="headerlink" title="3. 项目首屏渲染过慢"></a>3. 项目首屏渲染过慢</h3><p>  <strong>问题：</strong> webpack 打包应用时，将整个应用打包成一个 js 文件，当应用规模过大时，造成首屏渲染速度过慢，影响用户体验<br>  <strong>解决：</strong> 项目进行代码分割，路由动态加载</p><h3 id="4-空数据处理"><a href="#4-空数据处理" class="headerlink" title="4.空数据处理"></a>4.空数据处理</h3><p>  <strong>问题：</strong> 某些接口获取到数据为空，直接影响到页面展现<br>  <strong>解决：</strong> 对数据进行判断处理，例如添加空数据处理页面，提升用户体验（空参数处理，常用 param == undefined 进行判断)</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><h3 id="1-使用-React-Native-React-Redux-snippets-for-es6-es7-插件"><a href="#1-使用-React-Native-React-Redux-snippets-for-es6-es7-插件" class="headerlink" title="1.使用 React-Native/React/Redux snippets for es6/es7 插件"></a>1.使用 React-Native/React/Redux snippets for es6/es7 插件</h3><p>  <strong>问题：</strong> 如何快速生成 React 文件模板<br>  <strong>解决：</strong> 上面那个插件，常用快捷命令 imrc和 cccs，具体查看插件用法</p><h3 id="2-编码规范"><a href="#2-编码规范" class="headerlink" title="2.编码规范"></a>2.编码规范</h3><p>  <strong>问题：</strong> 编码规范混乱<br>  <strong>解决：</strong> 严格按照编码规范和 ESLint 处理，规避报错和警告，如：</p><ul><li>禁止使用 var </li><li>数组之 map 和 forEach</li><li><strong>……</strong></li></ul><h3 id="3-是否使用-redux"><a href="#3-是否使用-redux" class="headerlink" title="3.是否使用 redux"></a>3.是否使用 redux</h3><p>  <strong>问题：</strong> 项目是否需要引进 redux<br>  <strong>解决：</strong> 分析项目是否有足够多的公用变量读取进行合理引进。例如本项目中公用变量较少，则暂不引进 redux，而是采用了global文件</p><h3 id="4-接口对接"><a href="#4-接口对接" class="headerlink" title="4.接口对接"></a>4.接口对接</h3><p>  <strong>问题：</strong> 由于缺乏项目经验和规范，接口对接工作极其混乱，浪费大量时间<br>  <strong>解决：</strong> 项目开发之前，前后端应该共同商讨接口对接问题，并制定接口文案，接口工作基于文档开展</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/05/hello-world/"/>
      <url>/2019/09/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
